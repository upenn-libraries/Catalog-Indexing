---
- name: Create catalog-indexing dir
  ansible.builtin.file:
    path: "{{ project_root ~ '/catalog-indexing' }}"
    state: directory
    mode: 0440

# If is_development = true and catalog_indexing_build_docker_image = false
# Pull existing docker image from the registry to reduce build time
- name: Pull and use docker image from registry
  block:
    # Pull registry image
    - name: Pull the image from the registry
      community.docker.docker_image:
        force_source: true
        force_tag: true
        name: "{{ catalog_indexing_image_registry ~ ':' ~ catalog_indexing_image_tag }}"
        repository: "{{ catalog_indexing_image_name ~ ':' ~ catalog_indexing_image_tag }}"
        source: pull
      when: is_development and not catalog_indexing_build_docker_image | default (false, true)
      tags: dev_environment
  rescue:
    # An error occurred in the process of pulling the registry so build the image instead
    - name: Failed to find registry image - building image instead
      import_tasks: "build_docker_image.yml"
      when: is_development and not catalog_indexing_build_docker_image | default (false, true)
      tags: dev_environment

# Build the docker image
- name: "Build docker image"
  import_tasks: "build_docker_image.yml"
  when: is_development and catalog_indexing_build_docker_image | default (false, true)
  tags: dev_environment

- name: Create versioned docker secrets
  community.docker.docker_secret:
    name: "{{ 'catalog_indexing_' ~ item.key ~ '_v' ~ item.value.version }}"
    data: "{{ item.value.value }}"
    state: present
  with_dict:
    - "{{ catalog_indexing_versioned_secrets }}"
  tags: versioned_secrets
  no_log: true

# Execute development env steps
- name: Deploy catalog-indexing development environment
  community.docker.docker_stack:
    name: "catalog-indexing"
    compose:
      - "{{ role_path ~ '/files/docker-compose.yml' }}"
      - "{{ role_path ~ '/files/docker-compose.dev.yml' }}"
    state: present
  environment:
    ALMA_API_KEY: "{{ 'catalog_indexing_alma_api_key_v' ~ catalog_indexing_versioned_secrets.alma_api_key.version }}"
    APP_IMAGE_NAME: "{{ catalog_indexing_image_name }}"
    APP_IMAGE_TAG: "{{ catalog_indexing_image_tag }}"
    APP_PORT: "{{ catalog_indexing_port }}"
    APP_REPLICAS: "{{ catalog_indexing_replicas }}"
    APP_URL: "{{ catalog_indexing_url }}"
    DATABASE_NAME: "{{ postgres_database_name }}"
    DATABASE_PASSWORD: "{{ postgres_database_versioned_secrets.database_password.secret_name_prefix + postgres_database_versioned_secrets.database_password.version }}"
    DATABASE_USER: "{{ postgres_database_user }}"
    RAILS_ENV: "{{ catalog_indexing_rails_env }}"
    RAILS_MASTER_KEY: "{{ 'catalog_indexing_rails_master_key_v' ~ catalog_indexing_versioned_secrets.rails_master_key.version }}"
    REDIS_SIDEKIQ_USER: "sidekiq"
    REDIS_SIDEKIQ_PASSWORD: "{{ 'redis_sidekiq_password_v' ~ redis.versioned_configs.users_acl.users | selectattr('name', 'equalto', 'sidekiq') | map(attribute='version')  | join('') }}"
    REDIS_PORT: "{{ redis.port }}"
    SFTP_PASSWORD: "{{ 'catalog_indexing_sftp_password_v' ~ catalog_indexing_versioned_secrets.sftp_password.version }}"
    SFTP_USERNAME: "{{ 'catalog_indexing_sftp_username_v' ~ catalog_indexing_versioned_secrets.sftp_username.version }}"
    SIDEKIQ_PRO_CREDENTIALS: "{{ 'catalog_indexing_sidekiq_pro_credentials_v' ~ catalog_indexing_versioned_secrets.sidekiq_pro_credentials.version }}"
    SLACK_WEBHOOK_URL: "{{ 'catalog_indexing_slack_webhook_url_v' ~ catalog_indexing_versioned_secrets.slack_webhook_url.version }}"
    SOLR_ADMIN_URL: "{{ catalog_indexing_solr_admin_url }}"
    SOLR_PASSWORD: "{{ 'catalog_indexing_solr_password_v' ~ catalog_indexing_versioned_secrets.solr_password.version }}"
    SOLR_INSTANCES: "{{ solr_instances }}"
    SOLR_URL: "{{ catalog_indexing_solr_url }}"
    SOLR_USERNAME: "{{ 'catalog_indexing_solr_username_v' ~ catalog_indexing_versioned_secrets.solr_username.version }}"
    SOLR_COLLECTION_SHARDS: "{{ solr_collection_shards }}"
    SOLR_COLLECTION_REPLICAS: "{{ solr_collection_replicas }}"
    SOLR_CONFIGSET_NAME: "{{ solr_configsets[0].name }}"
  changed_when: false
  no_log: true
  when: is_development | default (false, true)
  tags: dev_environment

# Execute staging/production steps
- name: Copy docker-compose file
  copy:
    src: "../files/{{ item }}"
    dest: "{{ project_root ~ '/catalog-indexing/' }}"
  when: not is_development | default (false) == true
  loop:
    - "docker-compose.yml"
    - "docker-compose.prod.yml"

# Execute staging/production env steps
- name: Deploy catalog-indexing
  community.docker.docker_stack:
    name: "catalog-indexing"
    compose:
      - "{{ project_root ~ '/catalog-indexing/docker-compose.yml' }}"
      - "{{ project_root ~ '/catalog-indexing/docker-compose.prod.yml' }}"
    state: present
  environment:
    ALMA_API_KEY: "{{ 'catalog_indexing_alma_api_key_v' ~ catalog_indexing_versioned_secrets.alma_api_key.version }}"
    ALMA_WEBHOOK_SECRET: "{{ 'catalog_indexing_alma_webhook_secret_v' ~ catalog_indexing_versioned_secrets.alma_webhook_secret.version }}"
    APP_IMAGE_NAME: "{{ catalog_indexing_image_name }}"
    APP_IMAGE_TAG: "{{ catalog_indexing_image_tag }}"
    APP_PORT: "{{ catalog_indexing_port }}"
    APP_REPLICAS: "{{ catalog_indexing_replicas }}"
    APP_URL: "{{ catalog_indexing_url }}"
    DATABASE_NAME: "{{ postgres_database_name }}"
    DATABASE_PASSWORD: "{{ postgres_database_versioned_secrets.database_password.secret_name_prefix + postgres_database_versioned_secrets.database_password.version }}"
    DATABASE_USER: "{{ postgres_database_user }}"
    HONEYBADGER_API_KEY: "{{ 'catalog_indexing_honeybadger_api_key_v' ~ catalog_indexing_versioned_secrets.honeybadger_api_key.version }}"
    RAILS_ENV: "{{ catalog_indexing_rails_env }}"
    RAILS_MASTER_KEY: "{{ 'catalog_indexing_rails_master_key_v' ~ catalog_indexing_versioned_secrets.rails_master_key.version }}"
    REDIS_SIDEKIQ_USER: "sidekiq"
    REDIS_SIDEKIQ_PASSWORD: "{{ 'redis_sidekiq_password_v' ~ redis.versioned_configs.users_acl.users | selectattr('name', 'equalto', 'sidekiq') | map(attribute='version')  | join('') }}"
    REDIS_PORT: "{{ redis.port }}"
    SFTP_PASSWORD: "{{ 'catalog_indexing_sftp_password_v' ~ catalog_indexing_versioned_secrets.sftp_password.version }}"
    SFTP_USERNAME: "{{ 'catalog_indexing_sftp_username_v' ~ catalog_indexing_versioned_secrets.sftp_username.version }}"
    SLACK_WEBHOOK_URL: "{{ 'catalog_indexing_slack_webhook_url_v' ~ catalog_indexing_versioned_secrets.slack_webhook_url.version }}"
    SOLR_ADMIN_URL: "{{ catalog_indexing_solr_admin_url }}"
    SOLR_INSTANCES: "{{ solr_instances }}"
    SOLR_COLLECTION_SHARDS: "{{ solr_collection_shards }}"
    SOLR_COLLECTION_REPLICAS: "{{ solr_collection_replicas }}"
    SOLR_CONFIGSET_NAME: "{{ solr_configsets[0].name }}"
    SOLR_URL: "{{ catalog_indexing_solr_url }}"
    SOLR_USERNAME: "{{ 'catalog_indexing_solr_username_v' ~ catalog_indexing_versioned_secrets.solr_username.version }}"
    SOLR_PASSWORD: "{{ 'catalog_indexing_solr_password_v' ~ catalog_indexing_versioned_secrets.solr_password.version }}"
  changed_when: false
  no_log: true
  when: not is_development | default (false, true)

- name: Recursively remove project directory
  ansible.builtin.file:
    path: "{{ project_root ~ '/catalog-indexing' }}"
    state: absent
  when: not is_development | default (false, true)
